73. 矩阵置零
提示
中等
974
相关企业
给定一个 m x n 的矩阵，如果一个元素为 0 ，则将其所在行和列的所有元素都设为 0 。请使用 原地 算法。

 

示例 1：


输入：matrix = [[1,1,1],[1,0,1],[1,1,1]]
输出：[[1,0,1],[0,0,0],[1,0,1]]
示例 2：


输入：matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
输出：[[0,0,0,0],[0,4,5,0],[0,3,1,0]]
 

提示：

m == matrix.length
n == matrix[0].length
1 <= m, n <= 200
-231 <= matrix[i][j] <= 231 - 1
 

进阶：

一个直观的解决方案是使用  O(mn) 的额外空间，但这并不是一个好的解决方案。
一个简单的改进方案是使用 O(m + n) 的额外空间，但这仍然不是最好的解决方案。
你能想出一个仅使用常量空间的解决方案吗？

两层循环的思路，从a11开始，因为是原地的改变，所以如果aij=0我们先把i行和j列中不等于0的替换为*，否则就会影响后面的判断

## Python


class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:
        """
        Do not return anything, modify matrix in-place instead.
        """
        m=len(matrix)
        n=len(matrix[0])
        for i in range(m):
            for j in range(n):
                if matrix[i][j]==0:
                    x = 0
                    while x<m:
                        if matrix[x][j]!=0:
                            matrix[x][j] = '*' 
                        x += 1
                    y = 0 
                    while y<n:
                        if matrix[i][y]!=0:
                            matrix[i][y] = '*' 
                        y += 1
        for i in range(m):
            for j in range(n):
                if matrix[i][j] == '*':
                    matrix[i][j] = 0 
